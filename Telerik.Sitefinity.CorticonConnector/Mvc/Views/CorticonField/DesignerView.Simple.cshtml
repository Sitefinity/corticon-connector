@using Telerik.Sitefinity.Frontend.Forms.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Forms.Mvc.Models.Fields.TextField;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Mvc;

<div class="form-group">
    <label for="title">
        @Html.Resource("Label")
    </label>
    <div class="row">
        <div class="col-xs-6">
            <input id="title" type="text" ng-model="properties.Model.MetaField.Title.PropertyValue" class="form-control" />
        </div>
    </div>
    <p class="text-muted">@Html.Resource("LabelVisibleOnlyInDesign")</p>
</div>

<div class="form-group">
    <label for="fieldName">
        @Html.Resource("FieldName")
    </label>
    <div class="row">
        <div class="col-xs-6">
            <input id="fieldName" ng-readonly="fieldNameIsSet" type="text" ng-model="properties.Model.MetaField.FieldName.PropertyValue" class="form-control" />
        </div>
    </div>
    <p class="text-muted">@Html.Resource("FormFieldCanNotBeEdited")</p>
</div>

<div class="form-group">
    <label for="predefinedValue">
        @Html.Resource("PredefinedValue")
    </label>
    <div class="row">
        <div class="col-xs-6">
            <input id="predefinedValue" type="{{fieldInputType}}" ng-model="defaultValue.value" ng-value="properties.Model.MetaField.DefaultValue.PropertyValue" class="form-control" maxlength="255" />
        </div>
    </div>

</div>

<div class="form-group">

    <label for="inputType">@Html.Resource("Type")</label>

    <div class="row">
        <div class="col-xs-6">
            <select id="inputType" ng-model="properties.Model.InputType.PropertyValue" class="form-control">
                @foreach (var typeName in Enum.GetNames(typeof(TextType)))
                {
                    <option value="@typeName">@(((TextType) Enum.Parse(typeof(TextType), typeName)).ToHtmlInputType())</option>
                }
            </select>
        </div>
    </div>
</div>
